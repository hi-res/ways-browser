// Generated by CoffeeScript 1.7.1
var Event, Hash, PseudoHistory,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Event = require('happens');

PseudoHistory = (function(_super) {
  __extends(PseudoHistory, _super);

  function PseudoHistory() {
    return PseudoHistory.__super__.constructor.apply(this, arguments);
  }

  PseudoHistory.prototype.state = null;

  return PseudoHistory;

})(Array);

module.exports = Hash = (function(_super) {
  __extends(Hash, _super);

  Hash.prototype.history = null;

  function Hash() {
    var hash, pathname;
    this.history = new PseudoHistory;
    hash = window.location.hash;
    pathname = window.location.pathname;
    this.base_path = window.location.base_path || '';
    pathname = pathname.replace(this.base_path, '');
    if (pathname === '/') {
      pathname = '';
    }
    if (hash === '') {
      if (pathname.length > 1) {
        window.location.href = this.base_path + '#/' + pathname;
      }
    }
    window.attachEvent('onhashchange', (function(_this) {
      return function() {
        return _this.emit('url:change', _this.pathname());
      };
    })(this), false);
  }

  Hash.prototype.pathname = function() {
    var pathname;
    pathname = window.location.hash;
    if (pathname.substr(0, 2) === '#/') {
      pathname = pathname.substr(2);
    }
    return pathname;
  };

  Hash.prototype.push = function(url, title, state) {
    if (url.indexOf(this.base_path) !== 0) {
      url = this.base_path + url;
    }
    this.history.push(this.history.state = state);
    window.location.hash = url;
    if (title != null) {
      document.title = title;
    }
    return this.emit('url:change', this.pathname());
  };

  Hash.prototype.replace = function(url, title, state) {
    this.history[this.history.length - 1] = this.history.state = state;
    if (title != null) {
      document.title = title;
    }
    return window.location.hash.replace(url);
  };

  return Hash;

})(Event);
