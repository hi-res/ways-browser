// Generated by CoffeeScript 1.6.3
var Event, Hash, PseudoHistory, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Event = require('happens');

PseudoHistory = (function(_super) {
  __extends(PseudoHistory, _super);

  function PseudoHistory() {
    _ref = PseudoHistory.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  PseudoHistory.prototype.state = null;

  return PseudoHistory;

})(Array);

module.exports = Hash = (function(_super) {
  __extends(Hash, _super);

  Hash.prototype.history = null;

  function Hash(base_path) {
    var hash, pathname,
      _this = this;
    this.base_path = base_path;
    this.history = new PseudoHistory;
    hash = window.location.hash;
    pathname = window.location.pathname.replace(this.base_path, "");
    window.attachEvent('onhashchange', function() {
      return _this.emit('url:change', _this.pathname());
    }, false);
  }

  Hash.prototype.pathname = function() {
    var address, index;
    if (!this.base_path) {
      return window.location.hash;
    } else {
      index = String(window.location).indexOf(this.base_path);
      address = String(window.location).substr(index);
      return address.replace(this.base_path, '');
    }
  };

  Hash.prototype.push = function(url, title, state) {
    if (this.base_path != null) {
      if (url.indexOf(this.base_path) !== -1) {
        url = url.replace(this.base_path, '');
      }
    }
    this.history.push(this.history.state = state);
    window.location.hash = url;
    if (title != null) {
      return document.title = title;
    }
  };

  Hash.prototype.replace = function(url, title, state) {
    var hash;
    if (this.base_path != null) {
      if (url.indexOf(this.base_path) !== -1) {
        url = url.replace(this.base_path, '');
      }
    }
    this.history[this.history.length - 1] = this.history.state = state;
    if (title != null) {
      document.title = title;
    }
    hash = '#' + url;
    return window.location.hash = hash;
  };

  return Hash;

})(Event);
